@page "/deals"
@inject HttpClient Http
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<PageTitle>Deals</PageTitle>
<h1>Deals</h1>
<p>This is the deals overview page.</p>

<table class="table">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Company</th>
            <th>Amount</th>
            <th>Status</th>
            <th>Priority</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var deal in deals)
        {
            <tr>
                <td>@customers.FirstOrDefault(c => c.CustomerId == deal.FkCompanyId)?.FirstName + ' ' + @customers.FirstOrDefault(c => c.CustomerId == deal.FkCompanyId)?.LastName</td>
                <td>@companies.FirstOrDefault(c => c.CompanyId == deal.FkCompanyId)?.CompanyName</td>
                <td>@dealStatus.FirstOrDefault(ds => ds.DealStatusId == deal.FkDealStatusId)?.StatusName</td>
                <td>@priority.FirstOrDefault(p => p.PriorityId == deal.FkPriorityId)?.PriorityName</td>
            </tr>
        }
    </tbody>
</table>


@code {
    List<Deal> deals = new List<Deal>();
    List<Company> companies = new List<Company>();
    List<Customer> customers = new List<Customer>();
    List<DealStatus> dealStatus = new List<DealStatus>();
    List<Priority> priority = new List<Priority>();

    protected override async Task OnInitializedAsync()
    {
        var dealResult = await Http.GetFromJsonAsync<List<Deal>>("/api/deals");
        var customerResult = await Http.GetFromJsonAsync<List<Customer>>("/api/customers");
        var companyResult = await Http.GetFromJsonAsync<List<Company>>("/api/companies");
        var dealStatusResult = await Http.GetFromJsonAsync<List<DealStatus>>("/api/dealstatus");
        var priorityResult = await Http.GetFromJsonAsync<List<Priority>>("/api/priority");

        if (dealResult != null)
        deals = dealResult;

        if (companyResult != null)
        companies = companyResult;

        if (customerResult != null)
        customers = customerResult;

        if (dealStatusResult != null)
        dealStatus = dealStatusResult;

        if (priorityResult != null)
        priority = priorityResult;
    }
}
