@page "/add-customer"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<h3>Add Customer</h3>

<p>This is the page to Add a new customer.</p>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Add Customer</h4>
            </div>
            <div class="card-body">
                <EditForm Model="customer" OnValidSubmit="HandleSave" FormName="addCustomer">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group mb-3">
                        <label class="form-label" for="FirstName">First Name</label>
                        <InputText class="form-control" id="FirstName" placeholder="Enter first name" @bind-Value="customer.FirstName"></InputText>
                        <ValidationMessage For="@(() => customer.FirstName)" />
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label" for="LastName">Last Name</label>
                        <InputText class="form-control" id="LastName" placeholder="Enter last name" @bind-Value="customer.LastName"></InputText>
                        <ValidationMessage For="@(() => customer.LastName)" />
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label" for="Email">Email</label>
                        <InputText class="form-control" id="Email" placeholder="Enter e-mail" @bind-Value="customer.Email"></InputText>
                        <ValidationMessage For="@(() => customer.Email)" />
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label" for="PhoneNumber">Phone Number</label>
                        <InputText class="form-control" id="PhoneNumber" placeholder="Enter phone number" @bind-Value="customer.PhoneNumber"></InputText>
                        <ValidationMessage For="@(() => customer.PhoneNumber)" />
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label" for="City">City</label>
                        <InputText class="form-control" id="City" placeholder="Enter city" @bind-Value="customer.City"></InputText>
                        <ValidationMessage For="@(() => customer.City)" />
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label" for="Country">Country</label>
                        <InputText class="form-control" id="Country" placeholder="Enter country" @bind-Value="customer.Country"></InputText>
                        <ValidationMessage For="@(() => customer.Country)" />
                    </div>
                    @* <button type="submit" class="btn btn-primary mb-3">Save</button> *@
                    <div class="d-flex justify-content-start">
                        <button type="submit" class="btn btn-primary mb-3" style="margin-right: 20px;">Save</button>
                        <button class="btn btn-primary mb-3" @onclick="GoToCustomerPage">Go to Customer Page</button>
                    </div>

                </EditForm>
@*                 <button class="btn btn-primary mb-3" @onclick="GoToCustomerPage">Go to Customer Page</button> *@
                @if (showSuccessMessage)
                {
                    <div class="alert alert-success mt-3">
                        Customer Name: @addedCustomer.FirstName @addedCustomer.LastName <br />
                        with email @addedCustomer.Email <br />
                        added successfully!
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public Customer customer { get; set; } = new();
    private Customer addedCustomer = new();
    private bool showSuccessMessage = false;

    private async Task HandleSave()
    {

            addedCustomer = await CustomerService.AddCustomerAsync(customer);
            customer = new();
            showSuccessMessage = true;

    }

    private void GoToCustomerPage()
    {
        try
        {
            NavigationManager.NavigateTo("/customers", new NavigationOptions { HistoryEntryState = "Navigated to customers page" });
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error while navigating: {ex.Message}");
        }
    }
}

